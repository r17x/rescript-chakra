name: Publish

on:
  push:
    branches:
      - "+([1-9])?(.{+([1-9]),x}).x"
      - main
      - next
      - alpha
      - beta

jobs:
  tests:
    name: Test or Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 12
      - id: yarn-cache-dir
        name: Find Yarn's cache folder
        run: echo "::set-output name=path::$(yarn config get cacheFolder)"
      - name: Cache node modules
        uses: actions/cache@v2
        id: yarn-cache
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.yarn-cache-dir.outputs.path }}
          key: ${{ runner.os }}-yarn-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ env.cache-name }}-
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-
      - name: Install dependencies
        # if: ${{ !steps.yarn-cache.outputs.cache-hit }}
        env:
          CI: true
        run: |
          yarn install
          yarn ci
      - name: Build All Packages
        run: yarn run build

  publish:
    needs: tests
    name: Publish to Github & NPM or Github Package Registry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 12
      - id: yarn-cache-dir
        name: Find Yarn's cache folder
        run: echo "::set-output name=path::$(yarn config get cacheFolder)"
      - name: Cache node modules
        uses: actions/cache@v2
        id: yarn-cache
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.yarn-cache-dir.outputs.path }}
          key: ${{ runner.os }}-yarn-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ env.cache-name }}-
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-
      - name: Install dependencies
        # if: ${{ !steps.yarn-cache.outputs.cache-hit }}
        env:
          CI: true
        run: |
          yarn install
          yarn ci
      - if: success()
        env:
          CI: true
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
